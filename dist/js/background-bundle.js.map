{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Router.js","src/js/Timer.js","src/js/audio.js","src/js/background.js","src/js/badger.js","src/js/notify.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpfile":"background-bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconsole.info('Router module');\n\n\nmodule.exports = Router;\n\n\nfunction Router (identifier) {\n\n  // Unique identifier for current script\n  var id = identifier,\n    listeners = {},\n    self = this;\n\n  function send (name, value, cb) {\n\n    // @link https://developer.chrome.com/extensions/runtime#method-sendMessage\n    chrome.runtime.sendMessage({\n        id: id,\n        name: name,\n        value: value\n      },\n      cb);\n  }\n\n  function on (name, handler) {\n\n    // Save handler in router object.\n    listeners[name] = function (message, sender, cb) {\n\n      // If message was send from another Router instance or\n      // message name is not what we expecting then do nothing.\n      if (message.id !== id && message.name === name) {\n\n        // Handle message\n        cb(handler(message));\n      }\n    };\n\n    // @link https://developer.chrome.com/extensions/runtime#event-onMessage\n    chrome.runtime.onMessage.addListener(listeners[name]);\n\n    return self;\n  }\n\n  function deregister (name) {\n    if (name in listeners) {\n      chrome.runtime.onMessage.removeListener(listeners[name]);\n      delete listeners[name];\n    }\n  }\n\n  this.send = send;\n  this.on = on;\n  this.deregister = deregister;\n}\n\n","\"use strict\";\n\nvar Timer = function () {\n  var audio = require('./audio'),\n    badger = require('./badger'),\n    notify = require('./notify'),\n    timer = {\n      prevTimer: null,\n      timeoutId: null\n    };\n\n  function clearTimer () {\n    clearTimeout(timer.timeoutId);\n    timer.timeoutId = null;\n    badger.clear();\n  }\n\n  function isRunning () {\n    return !!timer.timeoutId;\n  }\n\n  function start (time) {\n    if (isRunning()) {\n      clearTimer();\n    }\n\n    // Save timer\n    timer.lastUsed = time;\n    badger.startShowingTime(time);\n\n    // Runs the timer\n    timer.timeoutId = setTimeout(function () {\n      notify.show();\n      reset();\n    }, time);\n\n  }\n\n  function reset () {\n    badger.clear();\n    clearTimer();\n  }\n\n  function repeat () {\n    start(timer.lastUsed);\n  }\n\n  this.start = start;\n  this.reset = reset;\n  this.repeat = repeat;\n};\n\nmodule.exports = Timer;\n","'use strict';\n\nvar audio = new Audio(''),\n    volume = 0.4;\n\ndocument.body.appendChild(audio);\n\nmodule.exports = {\n  play: function () {\n    audio.src = 'audio/alarm2.mp3';\n  },\n  stop: function () {\n    audio.src = '';\n  }\n};\n","\"use strict\";\n\nvar Timer = require('./Timer'),\n  Router = require('./Router'),\n  router = new Router('backend');\n\n\nvar timer = new Timer();\n\nrouter\n  .on('start', function (message) {\n    timer.start(message.value);\n  })\n  .on('reset', function () {\n    timer.reset();\n  })\n  .on('repeat', function () {\n    timer.repeat();\n  });\n\n","'use strict';\n\nconsole.info('badger module');\n\nvar updateIntervalId;\n\nfunction enableIcon () {\n  chrome.browserAction.setIcon({\n      path: 'images/16timer_enabled.png'\n    },\n    function () {});\n}\n\nfunction disableIcon () {\n  chrome.browserAction.setIcon({\n      path: 'images/16timer_disabled.png'\n    },\n    function () {});\n}\n\nfunction setText (value) {\n  chrome.browserAction.setBadgeText({\n    text: value\n  });\n}\n\nfunction clearText () {\n  chrome.browserAction.setBadgeText({\n    text: ''\n  });\n}\n\nfunction setBgColor (value) {\n  chrome.browserAction.setBadgeBackgroundColor({\n    color: value\n  });\n}\n\nfunction printTime (goal) {\n  var formattedDate = formatDate(goal - Date.now());\n  setText(formattedDate);\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n    mins = d.getMinutes(),\n    secs = d.getSeconds(),\n    formattedDate;\n  if (secs < 10) {\n    secs = '0' + secs;\n  }\n  formattedDate = mins + ':' + secs;\n  return formattedDate;\n}\n\nfunction startShowingTime (time) {\n  var goal = Date.now() + time;\n  enableIcon();\n  setBgColor('#845730');\n  printTime(goal);\n\n  updateIntervalId = setInterval(function () {\n    printTime(goal);\n  }, 1000);\n}\n\nfunction clear () {\n  clearInterval(updateIntervalId);\n  updateIntervalId = null;\n  disableIcon();\n  clearText();\n}\n\n\nmodule.exports = {\n  startShowingTime: startShowingTime,\n  clear: clear\n};\n","'use strict';\nvar audio = require('./audio');\n\nconsole.info('notify module');\n\nvar opts = {\n  type: 'basic',\n  buttons: [{\n    title: 'Snooze 1 minute',\n    iconUrl: 'images/zzz.png'\n  }, {\n    title: 'Stop',\n    iconUrl: 'images/close.png'\n  }],\n  isClickable: false,\n  priority: 2,\n  message: 'coffeeTimer',\n  title: 'title',\n  iconUrl: 'images/timer_128x128.png'\n};\n\n\n\nmodule.exports = {\n  show: function () {\n    chrome.notifications.create('timerId', opts, function () {\n      audio.play();\n      chrome.notifications.onClicked.addListener(function (id) {\n        chrome.notifications.clear(id, function () {\n          audio.stop();\n        });\n      });\n    });\n  }\n};"]}