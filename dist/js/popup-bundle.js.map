{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Router.js","src/js/popup.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"popup-bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconsole.info('Router module');\n\n\nmodule.exports = Router;\n\n\nfunction Router (identifier) {\n\n  // Unique identifier for current script\n  var id = identifier,\n    listeners = {},\n    self = this;\n\n  function send (name, value, cb) {\n\n    // @link https://developer.chrome.com/extensions/runtime#method-sendMessage\n    chrome.runtime.sendMessage({\n        id: id,\n        name: name,\n        value: value\n      },\n      cb);\n  }\n\n  function on (name, handler) {\n\n    // Save handler in router object.\n    listeners[name] = function (message, sender, cb) {\n\n      // If message was send from another Router instance or\n      // message name is not what we expecting then do nothing.\n      if (message.id !== id && message.name === name) {\n\n        // Handle message\n        cb(handler(message));\n      }\n    };\n\n    // @link https://developer.chrome.com/extensions/runtime#event-onMessage\n    chrome.runtime.onMessage.addListener(listeners[name]);\n\n    return self;\n  }\n\n  function deregister (name) {\n    if (name in listeners) {\n      chrome.runtime.onMessage.removeListener(listeners[name]);\n      delete listeners[name];\n    }\n  }\n\n  this.send = send;\n  this.on = on;\n  this.deregister = deregister;\n}\n\n","'use strict';\n\nvar Router = require('./Router'),\n    router = new Router('frontend');\n\nvar timerButtons = document.querySelectorAll('[data-timer]'),\n  timerReset = document.querySelector('[data-timer-reset]'),\n  timerRepeatLast = document.querySelector('[data-timer-repeat'),\n  i;\n\nfor (i = 0; i < timerButtons.length; i = i + 1) {\n  var button = timerButtons[i],\n    time = button.getAttribute('data-timer') * 60000;\n  button.innerHTML = button.getAttribute('data-timer') + ' min';\n  addHandler(button, time);\n}\n\ntimerReset.addEventListener('click', function () {\n  router.send('reset');\n});\ntimerRepeatLast.addEventListener('click', function () {\n  router.send('repeat');\n});\n\n\nfunction addHandler(button, time) {\n  button.addEventListener('click', function () {\n    router.send('start', time);\n  });\n}\n"]}